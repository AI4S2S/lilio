[build-system]
requires = ["hatchling>=1.8.0", "hatch-vcs", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[tool.hatch.version]
path = "lilio/__init__.py"

[tool.hatch.build.targets.sdist]
exclude = [
  "/.github", "/.mypy_cache", "/.pytest_cache", "/.githooks",
  "sonar-project.properties"
]

[tool.hatch.build.targets.wheel]
packages = ["lilio"]

[tool.hatch.publish.index]
disable = true  # Requires confirmation when publishing to pypi.

[project]
name = "lilio"
description = "python package for generating calendars for machine learning timeseries analysis."
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.8, <3.11"
authors = [
  {email = "y.liu@esciencecenter.nl"},
  {name = "Yang Liu, Bart Schilperoort, Peter Kalverla, Jannes van Ingen, Sem Vijverberg"}
]
maintainers = [
  {name = "Yang Liu", email = "y.liu@esciencecenter.nl"},
  {name = "Bart Schilperoort", email = "b.schilperoort@esciencecenter.nl"},
  {name = "Peter Kalverla", email = "b.schilperoort@esciencecenter.nl"},
  {name = "Jannes van Ingen", email = "jannes.van.ingen@s2s-ai.com"},
  {name = "Sem Vijverberg", email = "sem.vijverberg@vu.nl"},
]
keywords = [
  "calendar",
  "calendar generation",
  "calendar maker",
  "machine learning",
  "timeseries analysis",
]
classifiers = [
  "Development Status :: 2 - Pre-Alpha",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: Apache Software License",
  "Natural Language :: English",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
]
dependencies = [
  "netcdf4",
  "numpy",
  "pandas",
  "matplotlib",
  "xarray",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
  "bump2version",
  "hatch",
  "flake8",
  "flake8-pyproject",  # Allows flake8 configuration through this file
  "pyflakes",  # flake8 plugin, checks for errors in code
  "mccabe",  # flake8 plugin, checks code complexity
  "pep8-naming",  # flake8 plugin, checks PEP8 naming conventions
  "black",
  "isort",
  "mypy==0.981",
  "pytest",
  "pytest-cov",
]
docs = [  # Required for ReadTheDocs
  "myst_parser",
  "sphinx",
  "sphinx_rtd_theme",
  "sphinx-autoapi",
  "coverage[toml]",
]
bokeh = [
  "bokeh < 3.0.0",
]

[tool.hatch.envs.default]
features = ["dev", "bokeh"]

[tool.hatch.envs.default.scripts]
lint = [
  "flake8 .",
  "mypy lilio",
  "black --check --diff .",
  "isort --check-only --diff .",
]
format = ["isort .", "black .", "check",]
test = ["pytest",]
coverage = [
  "pytest --cov --cov-report term --cov-report xml --junitxml=xunit-result.xml tests/",
]

[tool.hatch.envs.docs]
features = ["bokeh", "docs"]

[tool.hatch.envs.docs.scripts]
build = [
  "sphinx-build -c docs -b doctest docs docs/_build",
  "sphinx-build -c docs -b coverage docs docs/_build",
  "sphinx-build -c docs -b html docs docs/_build/html",
]

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
ignore_missing_imports = true

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310']
include = '\.pyi?$'

[tool.isort]
py_version=39
skip = [".gitignore", ".dockerignore"]
skip_glob = ["docs/*"]
force_single_line = true
lines_after_imports = 2
no_lines_before = ["FUTURE","STDLIB","THIRDPARTY","FIRSTPARTY","LOCALFOLDER"]
known_first_party = ["lilio"]
src_paths = ["lilio", "tests"]
line_length = 120

[tool.flake8]
max-line-length = 88
ignore = [
  "E203",  # Whitespace before ":". Not PEP8 compliant (https://github.com/psf/black/issues/315)
  "E501",  # Line length: currently (some) docstrings do not comply.
  "W503",  # https://peps.python.org/pep-0008/#should-a-line-break-before-or-after-a-binary-operator
]

[tool.coverage.run]
branch = true
source = ["lilio"]
command_line = "-m pytest"

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "@overload",
  "if TYPE_CHECKING:",
  "if typing.TYPE_CHECKING:"
]
